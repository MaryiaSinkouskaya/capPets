<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>pr3</artifactId>
        <groupId>pr3</groupId>
        <version>${revision}</version>
    </parent>

    <artifactId>srv</artifactId>
    <packaging>jar</packaging>

    <name>srv</name>

    <!-- ACTUAL DEPENDENCIES -->
    <dependencies>
        <!-- CDS SPRING BOOT STARTER -->
        <dependency>
            <groupId>com.sap.cds</groupId>
            <artifactId>cds-starter-spring-boot</artifactId>
        </dependency>

        <!-- ODATA PROTOCOL ADAPTER -->
        <dependency>
            <groupId>com.sap.cds</groupId>
            <artifactId>cds-adapter-odata-v4</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.sap.cds</groupId>
            <artifactId>cds-starter-cloudfoundry</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.10</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <version>1.3-groovy-2.5</version>
            <scope>test</scope>
        </dependency>
        <!-- Mandatory dependencies for using Spock -->
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-junit4</artifactId>
            <version>2.0-M4-groovy-3.0</version>
            <scope>test</scope>
        </dependency>
        <!-- Optional dependencies for using Spock -->
        <dependency> <!-- enables mocking of classes (in addition to interfaces) -->
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>1.10.10</version>
            <scope>test</scope>
        </dependency>
        <dependency> <!-- enables mocking of classes without default constructor (together with ByteBuddy or CGLIB) -->
            <groupId>org.objenesis</groupId>
            <artifactId>objenesis</artifactId>
            <version>3.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <!-- SPRING BOOT PLUGIN -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.version}</version>
                <configuration>
                    <skip>false</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>repackage</id>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <classifier>exec</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- STEPS TO BUILD CDS MODEL AND GENERATE POJOs -->
            <plugin>
                <groupId>com.sap.cds</groupId>
                <artifactId>cds-maven-plugin</artifactId>
                <version>${cds.services.version}</version>
                <configuration>
                    <nodeVersion>${node.version}</nodeVersion>
                </configuration>
                <executions>
                    <execution>
                        <id>cds.clean</id>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>cds.install-node</id>
                        <goals>
                            <goal>install-node</goal>
                        </goals>
                        <configuration>
                            <downloadUrl>${node.url}</downloadUrl>
                        </configuration>
                    </execution>

                    <execution>
                        <id>install-cdsdk</id>
                        <goals>
                            <goal>install-cdsdk</goal>
                        </goals>
                        <configuration>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cds.build</id>
                        <goals>
                            <goal>cds</goal>
                        </goals>
                        <configuration>
                            <commands>
                                <command>build</command>

                                <command>deploy --to sqlite --dry &gt;
                                    "${project.basedir}/src/main/resources/schema.sql"
                                </command>
                            </commands>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cds.generate</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <basePackage>cds.gen</basePackage>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- A profile that uses global installation of @sap/cds-dk -->
        <profile>
            <id>cdsdk-global</id>
            <properties>
                <cdsdk-global>true</cdsdk-global>
            </properties>
        </profile>
    </profiles>
</project>